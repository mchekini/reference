buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'groovy'
apply plugin: 'jacoco'


group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-web-services')
	compile('org.codehaus.groovy.modules.http-builder:http-builder:0.7.1')
	compile ('org.codehaus.groovy:groovy-backports-compat23:2.3.7')

	testCompile('junit:junit:4.12')
	testCompile('org.codehaus.groovy:groovy-all:2.4.4')
	testCompile('org.spockframework:spock-core:1.0-groovy-2.4')
	testCompile('org.spockframework:spock-spring:1.0-groovy-2.4')

	runtime('org.springframework.boot:spring-boot-devtools')


	compileOnly('org.projectlombok:lombok:1.16.16')
	testCompile('org.springframework.boot:spring-boot-starter-test')


}

compileJava {
	options.incremental = true
	options.failOnError = false
}

def jacocoDir = file("$buildDir/jacoco")


jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
	}
}



